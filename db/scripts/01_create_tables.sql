CREATE TABLE IF NOT EXISTS users (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(36) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    last_login DATETIME DEFAULT NULL,
    user_config_id INT UNSIGNED DEFAULT NULL,
    first_name VARCHAR(36) NOT NULL,
    last_name VARCHAR(36) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    gender TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '1- male, 2- female',
    role_id INT UNSIGNED NOT NULL,
    address_id INT UNSIGNED NOT NULL,
    verified BOOLEAN NOT NULL DEFAULT FALSE,
    active BOOLEAN NOT NULL DEFAULT FALSE,
    driver_licence_number VARCHAR(255) UNIQUE,
    driver_licence_date DATETIME,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS roles (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS user_roles (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    user_id INT UNSIGNED NOT NULL,
    role_id INT UNSIGNED NOT NULL,
    assigned_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS languages (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(50) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS user_configs (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    user_id INT UNSIGNED NOT NULL,
    dark_mode BOOLEAN DEFAULT FALSE,
    language_id INT UNSIGNED DEFAULT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS user_addresses (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    user_id INT UNSIGNED NOT NULL,
    name VARCHAR(100) NOT NULL,
    street VARCHAR(100) NOT NULL,
    building_number VARCHAR(10) NOT NULL,
    local VARCHAR(10),
    city VARCHAR(50) NOT NULL,
    postal_code VARCHAR(10) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS car_brands (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS car_models (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE,
    brand_id INT UNSIGNED NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS cars (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    car_model_id INT UNSIGNED NOT NULL,
    vin VARCHAR(17) NOT NULL UNIQUE,
    register_number VARCHAR(20) NOT NULL,
    available BOOLEAN DEFAULT TRUE,
    rent_id INT UNSIGNED NULL,
    position_latitude DECIMAL(10, 8),
    position_longitude DECIMAL(11, 8),
    millage INT NOT NULL,
    color VARCHAR(50),
    img TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS rents (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    car_id INT UNSIGNED NOT NULL,
    user_id INT UNSIGNED NOT NULL,
    date_start DATETIME NOT NULL,
    date_end DATETIME,
    start_position POINT NOT NULL,
    end_position POINT,
    millage_start INT NOT NULL,
    millage_end INT,
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE user_roles
ADD CONSTRAINT fk_user_roles_user
FOREIGN KEY (user_id) REFERENCES users(id);

ALTER TABLE user_roles
ADD CONSTRAINT fk_user_roles_role
FOREIGN KEY (role_id) REFERENCES roles(id);

ALTER TABLE user_configs
ADD CONSTRAINT fk_user_configs_user
FOREIGN KEY (user_id) REFERENCES users(id);

ALTER TABLE user_configs
ADD CONSTRAINT fk_user_configs_language
FOREIGN KEY (language_id) REFERENCES languages(id);

ALTER TABLE user_addresses
ADD CONSTRAINT fk_user_addresses_user
FOREIGN KEY (user_id) REFERENCES users(id);

ALTER TABLE car_models
ADD CONSTRAINT fk_car_models_brand
FOREIGN KEY (brand_id) REFERENCES car_brands(id);

ALTER TABLE cars
ADD CONSTRAINT fk_cars_car_model
FOREIGN KEY (car_model_id) REFERENCES car_models(id);

ALTER TABLE cars
ADD CONSTRAINT fk_cars_rent
FOREIGN KEY (rent_id) REFERENCES rents(id);

ALTER TABLE rents
ADD CONSTRAINT fk_rents_car
FOREIGN KEY (car_id) REFERENCES cars(id);

ALTER TABLE rents
ADD CONSTRAINT fk_rents_user
FOREIGN KEY (user_id) REFERENCES users(id);